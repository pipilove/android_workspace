package com.zxing.activity;

import org.json.JSONException;
import org.json.JSONObject;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.TextView;
import android.widget.Toast;

import com.together.activity.GroupDetailsActivity;
import com.together.activity.MainActivity;
import com.together.activity.R;
import com.together.constant.Constant;
import com.together.net.HttpTask;

public class GroupScanJoinActivity extends Activity implements OnClickListener {
	/** Called when the activity is first created. */
	private Button join_button;
	private String groupID;
	private Handler grouphandler;

	private Handler groupUpdatehandler;
	private HttpTask groupTask;

	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.group_scan_join);

		// 打开扫描界面扫描条形码或二维码
		Intent openCameraIntent = new Intent(GroupScanJoinActivity.this,
				CaptureActivity.class);
		startActivityForResult(openCameraIntent, 0);

		join_button = (Button) findViewById(R.id.btn_join_group);
		join_button.setOnClickListener(this);

		// 在服务器上加群成功后更新本地数据
		grouphandler = new Handler() {
			@Override
			public void handleMessage(Message msg) {
				/* 将用户信息存入sharePreference */
				try {
					JSONObject groupinfoJson = new JSONObject(msg.getData()
							.getString("result"));
					try {
						Toast.makeText(GroupScanJoinActivity.this,
								groupinfoJson.getString("msg"),
								Toast.LENGTH_SHORT).show();
					} catch (Exception e) {
					}

					// 设置用户本地信息
					MainActivity.userinfo.setUserInfo(
							Constant.USERINFO_IS_INGROUP, true);
					System.out.println("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"+groupID);
					MainActivity.userinfo.setUserInfo(
							Constant.USERINFO_GROUPID, groupID);
					MainActivity.userinfo.setUserInfo(
							Constant.USERINFO_MEMBERID,
							groupinfoJson.getString("memberID"));
					updateGroup();

				} catch (JSONException e) {
					Log.e("!!! "
							+ this.getClass().getName().split("\\.")[this
									.getClass().getName().split("\\.").length - 1]
							+ " !!!", Log.getStackTraceString(e));
					finish();
				}

			}
		};

	}

	@Override
	protected void onActivityResult(int requestCode, int resultCode, Intent data) {
		super.onActivityResult(requestCode, resultCode, data);
		// 扫描成功
		if (resultCode == RESULT_OK) {
			Bundle bundle = data.getExtras();
			try {
				String[] scanResult = bundle.getString("result").split("\t");
				((TextView) findViewById(R.id.tv_join_group))
						.setText(scanResult[1]);

				groupID = scanResult[0];

			} catch (Exception e) {
				Log.e("!!! "
						+ this.getClass().getName().split("\\.")[this
								.getClass().getName().split("\\.").length - 1]
						+ " !!!", Log.getStackTraceString(e));
				Toast.makeText(GroupScanJoinActivity.this,
						R.string.scan_failed, Toast.LENGTH_SHORT).show();
				finish();
			}
		} else {// 取消扫描或扫描失败
			Toast.makeText(GroupScanJoinActivity.this, R.string.scan_cancel,
					Toast.LENGTH_SHORT).show();
			finish();
		}

	}

	@Override
	public void onClick(View v) {
		switch (v.getId()) {
		case R.id.btn_join_group:
			JSONObject jsonGroupInfo = new JSONObject();
			try {
				jsonGroupInfo.put("IMEI", MainActivity.userinfo
						.getStringUserInfo(Constant.USERINFO_PHONEIMEI));
				jsonGroupInfo.put("groupID", groupID);
			} catch (JSONException e) {
				Log.e("!!! "
						+ this.getClass().getName().split("\\.")[this
								.getClass().getName().split("\\.").length - 1]
						+ " !!!", Log.getStackTraceString(e));
			}

			HttpTask groupinfoTask = new HttpTask(grouphandler);
			System.out.print("!!!!!!(%%^$$*&(&$%!!!!!!!!!!!!");
			groupinfoTask.execute(Constant.BASIC_URL
					+ Constant.POST_JOIN_GROUP_INFO, jsonGroupInfo.toString());
			break;
		default:
			break;
		}
	}

	// 根据groupid查询信息
	protected void updateGroup() {
		// 上传服务器信息
		final JSONObject jsonGroupInfo = new JSONObject();
		try {
			jsonGroupInfo.put("memberID", MainActivity.userinfo
					.getStringUserInfo(Constant.USERINFO_MEMBERID));
			jsonGroupInfo.put("groupID", MainActivity.userinfo
					.getStringUserInfo(Constant.USERINFO_GROUPID));
		} catch (JSONException e) {
			e.printStackTrace();
		}
		groupUpdatehandler = new Handler() {
			@Override
			public void handleMessage(Message msg) {
				Log.d("返回UI线程", msg.getData().getString("result"));
				try {
					JSONObject jsongroupInfo = new JSONObject(msg.getData()
							.getString("result"));
					String groupNameString = jsongroupInfo
							.getString("groupName");
					String groupNoticeString = jsongroupInfo
							.getString("groupNotice");
					Intent intent = new Intent();
					intent.putExtra("groupNameString", groupNameString);
					intent.putExtra("groupNoticeString", groupNoticeString);
					setResult(101, intent);
					Toast.makeText(getApplicationContext(), "即将更新界面",
							Toast.LENGTH_SHORT).show();
					// GroupScanJoinActivity.this.finish();
					finish();
				} catch (JSONException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}

			}
		};
		groupTask = new HttpTask(groupUpdatehandler);
		groupTask.execute(Constant.BASIC_URL + Constant.POST_GET_GROUP_INFO,
				jsonGroupInfo.toString());

	}
}
